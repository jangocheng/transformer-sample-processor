<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.streamsets</groupId>
    <artifactId>streamsets-transformer</artifactId>
    <version>3.9.0-SNAPSHOT</version>
  </parent>
  <groupId>com.example</groupId>
  <artifactId>streamsets-example-processor-lib</artifactId>
  <version>3.9.0-SNAPSHOT</version>
  <description>StreamSets Example Processor</description>
  <name>StreamSets Example Processor</name>
  <packaging>jar</packaging>

  <repositories>
    <repository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
  </pluginRepositories>

  <properties>
    <datacollector.version>3.9.0-SNAPSHOT</datacollector.version>
    <transformer.version>3.9.0-SNAPSHOT</transformer.version>
    <jackson.version>2.6.7</jackson.version>
    <javaVersion>1.8</javaVersion>
    <scala.java8-compat.version>0.9.0</scala.java8-compat.version>
    <scala.version>2.11.8</scala.version>
    <spark.version>2.4.0</spark.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>streamsets-spark-api</artifactId>
      <version>${transformer.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>streamsets-datacollector-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>streamsets-spark-dataformats-lib</artifactId>
      <version>${transformer.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>streamsets-transformer-container</artifactId>
      <version>${datacollector.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>streamsets-datacollector-container</artifactId>
      <version>${datacollector.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>streamsets-datacollector-container-common</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>transformer-container-common</artifactId>
      <version>${transformer.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.11</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.typesafe.scala-logging</groupId>
      <artifactId>scala-logging_2.11</artifactId>
      <version>3.9.0</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-scala_2.11</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.scala-lang.modules</groupId>
      <artifactId>scala-java8-compat_2.11</artifactId>
      <version>${scala.java8-compat.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>2.1.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql-kafka-0-10_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>streamsets-spark-container</artifactId>
      <version>${transformer.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.dimafeng</groupId>
      <artifactId>testcontainers-scala_2.11</artifactId>
      <version>0.20.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>1.9.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>1.9.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <version>1.10.6</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.11</artifactId>
      <version>3.0.3</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <compilerId>javac-with-errorprone</compilerId>
            <forceJavacCompilerUse>true</forceJavacCompilerUse>
            <source>${javaVersion}</source>
            <target>${javaVersion}</target>
            <compilerArgs>
              <!-- Disables Javadoc failures for new strict Java 8 rules -->
              <arg>-Xdoclint:none</arg>
              <!-- We need to clean up SDC project a bit more before enabling this
              <arg>-Xlint:unchecked</arg>
              <arg>-Xlint:deprecation</arg>
              -->
            </compilerArgs>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-compiler-javac-errorprone</artifactId>
              <version>2.8</version>
            </dependency>
            <!-- override plexus-compiler-javac-errorprone's dependency on
                 Error Prone with the latest version -->
            <dependency>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>2.0.19</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <version>3.4.4</version>
            <executions>
              <execution>
                <id>scala-compile-first</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>add-source</goal>
                  <goal>compile</goal>
                </goals>
              </execution>
              <execution>
                <id>scala-test-compile</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>testCompile</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <scalaVersion>${scala.version}</scalaVersion>
              <recompileMode>incremental</recompileMode>
              <useZincServer>true</useZincServer>
              <args>
                <arg>-unchecked</arg>
                <arg>-deprecation</arg>
                <arg>-feature</arg>
                <arg>-explaintypes</arg>
                <arg>-Yno-adapted-args</arg>
              </args>
              <jvmArgs>
                <jvmArg>-Xms1024m</jvmArg>
                <jvmArg>-Xmx1024m</jvmArg>
              </jvmArgs>
              <javacArgs>
                <javacArg>-source</javacArg>
                <javacArg>${java.version}</javacArg>
                <javacArg>-target</javacArg>
                <javacArg>${java.version}</javacArg>
                <javacArg>-Xlint:all,-serial,-path,-try</javacArg>
              </javacArgs>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.7</version>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <!-- enable scalatest -->
          <plugin>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest-maven-plugin</artifactId>
            <version>1.0</version>
            <configuration>
              <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
              <junitxml>.</junitxml>
              <filereports>WDF TestSuite.txt</filereports>
              <suffixes>(?&lt;!Python)(Spec)</suffixes>
            </configuration>
            <executions>
              <execution>
                <id>test</id>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>python</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <version>3.4.4</version>
            <executions>
              <execution>
                <id>scala-compile-first</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>add-source</goal>
                  <goal>compile</goal>
                </goals>
              </execution>
              <execution>
                <id>scala-test-compile</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>testCompile</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <scalaVersion>${scala.version}</scalaVersion>
              <recompileMode>incremental</recompileMode>
              <useZincServer>true</useZincServer>
              <args>
                <arg>-unchecked</arg>
                <arg>-deprecation</arg>
                <arg>-feature</arg>
                <arg>-explaintypes</arg>
                <arg>-Yno-adapted-args</arg>
              </args>
              <jvmArgs>
                <jvmArg>-Xms1024m</jvmArg>
                <jvmArg>-Xmx1024m</jvmArg>
              </jvmArgs>
              <javacArgs>
                <javacArg>-source</javacArg>
                <javacArg>${java.version}</javacArg>
                <javacArg>-target</javacArg>
                <javacArg>${java.version}</javacArg>
                <javacArg>-Xlint:all,-serial,-path,-try</javacArg>
              </javacArgs>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.7</version>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <!-- enable scalatest -->
          <plugin>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest-maven-plugin</artifactId>
            <version>1.0</version>
            <configuration>
              <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
              <junitxml>.</junitxml>
              <filereports>WDF TestSuite.txt</filereports>
              <suffixes>Spec</suffixes>
            </configuration>
            <executions>
              <execution>
                <id>test</id>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
